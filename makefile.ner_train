NER_TRAIN_DIR=data/ner_train/$(L2)
NER_TRAIN_TMP=tmp/ner_train/$(L2)

############################################### STAGE 1 ######################################################
########### SMART WAY OF IMPORTING NER INFO INTO THE UNTOKENIZED TEXT TO AVOID PROBLEMS IN TOKENIZATION ######
##############################################################################################################

OFFICIAL_NER_DATA=data/ner_train/ru/Collection5

NER_TRAIN_IMPORT_DIR=$(NER_TRAIN_DIR)/01.import

import_ner : $(NER_TRAIN_IMPORT_DIR)/done
$(NER_TRAIN_IMPORT_DIR)/done :
	mkdir -p $(dir $@)
	for txt in $(OFFICIAL_NER_DATA)/*.txt; do \
		ann=$${txt%.txt}.ann; \
		base=`basename $$txt`; \
		echo "Processing $$txt" >&2; \
		scripts/prepare_for_ner_ru.pl $$txt $$ann > $(dir $@)/$$base; \
	done && \
	touch $@

############################################### STAGE 2 ######################################################
################### SEGMENT< TOKENIZE, LEMMATIZE, POS TAG RUSSIAN TEXTS AND PRINT NER DATA ###################
##############################################################################################################

NER_TRAIN_EXPORT_DIR=$(NER_TRAIN_DIR)/02.export

export_ner : $(NER_TRAIN_EXPORT_DIR)/done
$(NER_TRAIN_EXPORT_DIR)/done : $(NER_TRAIN_IMPORT_DIR)/done
	mkdir -p $(dir $@)
	mkdir -p $(NER_TRAIN_TMP)/02.export.runs
	$(TREEX) -Lru -p --jobs=100 --priority=0 --queue 'ms-all.q@*' --workdir='$(NER_TRAIN_TMP)/02.export.runs/{NNN}-run-{XXXX}' \
		Read::Text from='!$(dir $<)/*.txt' \
		W2A::Segment \
		W2A::RU::Tokenize \
		W2A::FixAfterNERLoad \
		W2A::TagTreeTagger lemmatize=1 \
		Write::ForNER path=$(dir $@) && \
	touch $@

all_data_ner : $(NER_TRAIN_DIR)/all.txt
$(NER_TRAIN_DIR)/all.txt : $(NER_TRAIN_EXPORT_DIR)/done
	find $(dir $<) -name '*.txt' | sort | xargs cat > $@
train_data_ner : $(NER_TRAIN_DIR)/train.txt
$(NER_TRAIN_DIR)/train.txt : $(NER_TRAIN_EXPORT_DIR)/done
	find $(dir $<) -name '*.txt' | sort | head -n 900 | xargs cat > $@
dev_data_ner : $(NER_TRAIN_DIR)/dev.txt
$(NER_TRAIN_DIR)/dev.txt : $(NER_TRAIN_EXPORT_DIR)/done
	find $(dir $<) -name '*.txt' | sort | tail -n 100 | xargs cat > $@

############################################### STAGE 3 ######################################################
######################################## TRAINING THE NER MODEL ##############################################
##############################################################################################################

NAMETAG=/net/projects/nametag/bin/nametag-latest-bin/bin-linux64/train_ner

NAMETAG_ITER=20
NAMETAG_MISSWEIGHT=-0.2
NAMETAG_INITLR=0.1
NAMETAG_FINALLR=0.001
NAMETAG_L2=0.5
NAMETAG_HIDDEN=10

train_ner : $(NER_TRAIN_DIR)/ru.ner.model
$(NER_TRAIN_DIR)/ru.ner.model : $(NER_TRAIN_DIR)/train.txt $(NER_TRAIN_DIR)/dev.txt $(NER_TRAIN_DIR)/nametag.feats
	$(NAMETAG) generic external \
		$(word 3,$^) \
		2 $(NAMETAG_ITER) \
		$(NAMETAG_MISSWEIGHT) \
		$(NAMETAG_INITLR) $(NAMETAG_FINALLR) \
		$(NAMETAG_L2) $(NAMETAG_HIDDEN) \
		$(word 2,$^) \
		< $(word 1,$^) > $@
