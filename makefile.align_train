ALITRAIN_DIR=data/align_train/$(LPAIR)
ALITRAIN_TMP=tmp/align_train/$(LPAIR)

############################################### STAGE 1-2 ####################################################
############ PREPARE ALL TRAINING DATA FOR L1-L2 WORD ALIGNMENT MODEL ON LEMMATIZED TEXTS ####################
##############################################################################################################

ALITRAIN_IN_DIR=$(ALITRAIN_DIR)/00.in
ALITRAIN_SPLIT_DIR=$(ALITRAIN_DIR)/01.split
ALITRAIN_FOR_GIZA_DIR=$(ALITRAIN_DIR)/02.for_giza
ALITRAIN_IN_DATA_en_ru:=$(addprefix data/align_train/en_ru/00.in/,MultiUN.en-ru.txt.gz OpenSubtitles2016.en-ru.txt.gz TED2013.en-ru.txt.gz Wikipedia.en-ru.txt.gz)
ALITRAIN_IN_DATA_en_de:=$(addprefix data/align_train/en_de/00.in/,DGT.de-en.txt.gz EUbookshop.de-en.txt.gz Europarl.de-en.txt.gz MultiUN.de-en.txt.gz OpenSubtitles2016.de-en.txt.gz Wikipedia.de-en.txt.gz)

merge_all : $(ALITRAIN_IN_DIR)/all.$(LPAIR).txt.gz
$(ALITRAIN_IN_DIR)/all.$(LPAIR).txt.gz : $(ALITRAIN_IN_DATA_$(LPAIR))
	zcat $^ | gzip -c > $@

filter_long_for_giza : $(ALITRAIN_IN_DIR)/all.$(LPAIR).filtered.txt.gz
$(ALITRAIN_IN_DIR)/all.$(LPAIR).filtered.txt.gz : $(ALITRAIN_IN_DIR)/all.$(LPAIR).txt.gz
	zcat $< | perl -ne 'my ($$s1, $$s2) = split /\t/, $$_; print $$_ if (length($$s1) < 3000 && length($$s2) < 3000);' | gzip -c > $@

data_split : $(ALITRAIN_IN_DIR)/all.$(LPAIR).filtered.txt.gz
	mkdir -p $(ALITRAIN_SPLIT_DIR)/all.$(LPAIR)
	zcat $< | split -d -a 7 --additional-suffix .txt -l 2000 - $(ALITRAIN_SPLIT_DIR)/all.$(LPAIR)/src_

for_giza_ru : $(ALITRAIN_FOR_GIZA_DIR)/all.en_ru.for_giza.gz
$(ALITRAIN_FOR_GIZA_DIR)/all.en_ru.for_giza.gz :
	mkdir -p $(dir $@)
	treex -p --jobs=200 --priority=0 --queue 'ms-all.q@*' --workdir='$(ALITRAIN_TMP)/02.for_giza.runs/{NNN}-run-{XXXX}' \
		Read::SentencesTSV from='!$(ALITRAIN_SPLIT_DIR)/all.en_ru/src_* $(OFFICIAL_TRAIN_DATA_DIR)/*.txt' langs=en,ru selector=src \
		Util::SetGlobal selector=src \
		scenario/en.lemmatize.scen \
		scenario/ru.lemmatize.scen \
		Write::LemmatizedBitexts selector=src language=en to_language=ru to_selector=src \
	| gzip -c > $@

for_giza_de : $(ALITRAIN_FOR_GIZA_DIR)/all.en_de.for_giza.gz
$(ALITRAIN_FOR_GIZA_DIR)/after_treex/done :
	mkdir -p $(dir $@)
	mkdir -p $(ALITRAIN_TMP)/02.for_giza.treex_runs
	treex -p --jobs=200 --priority=0 --queue 'ms-all.q@*' --workdir='$(ALITRAIN_TMP)/02.for_giza.treex_runs/{NNN}-run-{XXXX}' \
		Read::SentencesTSV from='!$(ALITRAIN_SPLIT_DIR)/all.en_de/*.txt $(OFFICIAL_TRAIN_DATA_DIR)/*.txt' skip_finished='{^.*/([^/]+)$$}{$(dir $@)$$1}' langs=en,de selector=src \
		Util::SetGlobal selector=src \
		scenario/en.lemmatize.scen \
		scenario/de.lemmatize.scen \
		Write::LemmatizedBitexts selector=src language=en to_language=de to_selector=src substitute='{^.*/([^/]+)$$}{$(dir $@)$$1.txt}' && \
	touch $@
$(ALITRAIN_FOR_GIZA_DIR)/after_mate/done : $(ALITRAIN_FOR_GIZA_DIR)/after_treex/done
	scripts/german_analysis_on_cluster.sh $(dir $<) $(dir $@) && \
	touch $@
$(ALITRAIN_FOR_GIZA_DIR)/all.en_de.for_giza.with_empty.gz : $(ALITRAIN_FOR_GIZA_DIR)/after_mate/done
	find $(dir $<) -name 'src_*.txt' | sort | xargs cat | gzip -c > $@
	find $(dir $<) -name '[0-9]*.txt' | sort | xargs cat | gzip -c >> $@
$(ALITRAIN_FOR_GIZA_DIR)/all.en_de.for_giza.gz : $(ALITRAIN_FOR_GIZA_DIR)/all.en_de.for_giza.with_empty.gz
	zcat $< | perl -ne 'chomp $$_; my ($$id, $$s1, $$s2) = split /\t/, $$_; print "$$_\n" if (defined $$s1 && defined $$s2 && ($$s1 !~ /^\s*$$/) && ($$s2 !~ /^\s*$$/));' | \
		gzip -c > $@

# prepare a sample of the data
sample_033 : $(ALITRAIN_FOR_GIZA_DIR)/all.sample_033.$(LPAIR).for_giza.gz
$(ALITRAIN_FOR_GIZA_DIR)/all.sample_%.$(LPAIR).for_giza.gz : $(ALITRAIN_FOR_GIZA_DIR)/all.$(LPAIR).for_giza.gz
	mkdir -p $(ALITRAIN_TMP)/02.for_giza.sample
	zcat $< | grep "^[^	]*\/src_[0-9]\+" | gzip -c > $(ALITRAIN_TMP)/02.for_giza.sample/alitrain.gz
	zcat $< | grep -v "^[^	]*\/src_[0-9]\+" | gzip -c > $(ALITRAIN_TMP)/02.for_giza.sample/official.gz
	zcat $(ALITRAIN_TMP)/02.for_giza.sample/alitrain.gz | perl -e 'srand(1986); while (<>) { print $$_ if (rand(100) < $*); }' | gzip -c > $(ALITRAIN_TMP)/02.for_giza.sample/alitrain.sample_$*.gz
	zcat $(ALITRAIN_TMP)/02.for_giza.sample/alitrain.sample_$*.gz $(ALITRAIN_TMP)/02.for_giza.sample/official.gz | gzip -c > $@


#W2A::RU::Tokenize
#W2A::CS::Tokenize

############################################### STAGE 3 ######################################################
################ RUN GIZA++ TO OBTAIN WORD ALIGNMENT ON PCEDT_19 (CAN BE USED DIRECTLY) ######################
############ AS WELL AS CS-RU WORD ALIGNMENT MODEL (CAN BE USED BY MGIZA; PERFORMS WORSE) ####################
##############################################################################################################

ALITRAIN_GIZA_DIR=$(ALITRAIN_DIR)/03.giza

# --continue-dir=$(ALITRAIN_TMP)/03.giza.tempdir/gizawrapMA3g

#giza : $(ALITRAIN_GIZA_DIR)/all.$(LPAIR).giza.gz
#$(ALITRAIN_GIZA_DIR)/all.$(LPAIR).giza.gz : $(ALITRAIN_FOR_GIZA_DIR)/all.$(LPAIR).for_giza.gz
#giza : $(ALITRAIN_GIZA_DIR)/all.sample_033.$(LPAIR).giza.gz
#$(ALITRAIN_GIZA_DIR)/all.sample_033.$(LPAIR).giza.gz : $(ALITRAIN_FOR_GIZA_DIR)/all.sample_033.$(LPAIR).for_giza.gz
giza : $(ALITRAIN_GIZA_DIR)/train.$(LPAIR).giza.gz
$(ALITRAIN_GIZA_DIR)/train.$(LPAIR).giza.gz : $(ALITRAIN_FOR_GIZA_DIR)/train.$(LPAIR).for_giza.gz
	mkdir -p $(dir $@)
	bin/gizawrapper.pl \
		--tempdir=$(ALITRAIN_TMP)/03.giza.tempdir \
		--bindir=$(shell pwd)/bin $< \
		--lcol=1 --rcol=2 \
		--keep \
		--dirsym=gdfa,int,left,right,revgdfa \
	| paste <(zcat $< | cut -f1 ) - \
	| gzip > $@


postcat : $(ALITRAIN_GIZA_DIR)/train.$(LPAIR).postcat.gz
$(ALITRAIN_GIZA_DIR)/train.$(LPAIR).postcat.gz : $(ALITRAIN_FOR_GIZA_DIR)/train.$(LPAIR).for_giza.gz
	mkdir -p $(dir $@); \
	mkdir -p $(ALITRAIN_TMP)/03.postcat.tempdir; \


