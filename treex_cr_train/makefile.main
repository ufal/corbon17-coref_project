SHELL=/bin/bash
#LANGUAGE_UC:=$(shell perl -e 'print uc("$(LANGUAGE)")')

TREEX=PERL5LIB=$$PERL5LIB:$$PWD/../../../lib treex

LRC=1
ifeq ($(LRC),1)
LRC_FLAG=-p --jobs 100 --queue 'troja-all.q@*' --priority=0 --workdir=tmp/treex_runs/{NNN}-run.{XXXX}
endif


ALL_DATA_TABLES=dev.$(DATA_NAME).table.gz train.$(DATA_NAME).table.gz
#eval.$(DATA_NAME).table.gz

train_table : $(ALL_DATA_TABLES)
train.$(DATA_NAME).table.gz : DATA=$(TRAIN_DATA)
dev.$(DATA_NAME).table.gz : DATA=$(DEV_DATA)
#eval.$(DATA_NAME).table.gz : DATA=$(EVAL_DATA)
$(ALL_DATA_TABLES) :
	dataname="$@"; \
	dataset=$${dataname%.$(DATA_NAME).table.gz}; \
	mkdir -p tmp/train_tables/$$dataset; \
	$(TREEX) $(LRC_FLAG) -L$(LANGUAGE) -Ssrc \
		Read::Treex from=@$(DATA) \
		Util::Eval tnode='delete $$tnode->wild->{filter_types};' \
		Coref::ProjectCorefEntities to_language=$(LANGUAGE) to_selector=src $(PROJECT_PARAMS) \
		$(COREF_PRINTER) path=tmp/train_tables/$$dataset language=$(LANGUAGE); \
	find tmp/train_tables/$$dataset -name '*' | sort | xargs cat | gzip -c > $@


#DATA_LIST=TRAIN_DATA DEV_DATA EVAL_DATA
DATA_LIST=TRAIN_DATA DEV_DATA
TEST_DATA_LIST=$(DATA_LIST)

ML_METHOD_LIST=../../ml_method.conf

        #EVAL_DATA=eval.$(DATA_NAME).table.gz 
train_test : $(ALL_DATA_TABLES)
	$(ML_FRAMEWORK_DIR)/run.sh -f ../../ml_params.ini \
        EXPERIMENT_TYPE=train_test \
        DATA_LIST="$(DATA_LIST)" \
		TEST_DATA_LIST="$(TEST_DATA_LIST)" \
        TRAIN_DATA=train.$(DATA_NAME).table.gz \
        DEV_DATA=dev.$(DATA_NAME).table.gz \
        FEATSET_LIST=$(FEATSET_LIST) \
        ML_METHOD_LIST=$(ML_METHOD_LIST) \
        LRC=$(LRC) \
        TMP_DIR=tmp/ml \
        D="$(D)"
